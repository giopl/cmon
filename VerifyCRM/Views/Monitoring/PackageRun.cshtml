@model IEnumerable<VerifyCRM.Models.MonitoringView>
@using utils = VerifyCRM.Helpers.Utils
@{
    ViewBag.Title = "Package Run";

    var package = Model.FirstOrDefault();

    var runDates = ViewBag.RunDates;
    var records = ViewBag.Records;
    var duration = ViewBag.Duration;
    
    
    
}

<h2>Package Run: <b>@package.LevelName</b></h2>

<ol class="breadcrumb">
    <li><a href="@Url.Action("RunHistory","Monitoring")">Home</a></li>
    <li><a href="@Url.Action("Packages","Package")">Packages</a></li>
    <li class="active">Package Run @package.LevelName</li>
</ol>


<p>
    @*<div id="container"></div>*@
    <div id="container2"></div>
</p>
<table class="table" id="dtable">
    <thead>


        <tr>

            <th>
                Rundate
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Row Count</th>
            <th>
                @Html.DisplayNameFor(model => model.throughput)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Errors)
            </th>


        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model.OrderByDescending(x => x.StartedOn))
        {
            <tr>

                <td data-order="@utils.ConvertDateToInt(item.StartedOn.Value)">

                    @item.StartedOn.Value.ToString("ddd dd-MMM-yy")

                </td>
                <td>
                    @if (item.statusCode == 2)
                    {
                        @item.DurationToNow

                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Duration)
                    }


                </td>
                <td>
                    @item.StartedOn.Value.ToString("HH:mm:ss")
                </td>
                <td>
                    @if (item.CompletedOn.HasValue)
                    {
                        @item.CompletedOn.Value.ToString("HH:mm:ss")
                    }


                </td>
                <td>

                    @if (!item.CompletedOn.HasValue && item.StartedOn < DateTime.Now.Date)
                    {
                        <span class="label label-default">8 - Incomplete</span>
                    }
                    else
                    {
                        <span class="label label-@(item.StatusLabel)">
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                    }

                </td>
                <td>@item.RecordCount</td>
                <td>@item.throughput</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Errors)
                </td>

            </tr>
        }
    </tbody>
</table>


<table id="datatable" style="display:none">
    <thead>
        <tr>
            <td>date</td>
            <td>duration</td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model.Where(x=>x.seconds > 0).OrderBy(x=>x.StartedOn))
        {
            <tr>
                <td>@item.StartedOn.Value.ToString("dd-MMM-yy")</td>
                <td>@item.seconds</td>
            </tr>
        }
    </tbody>
</table>


<table id="datatable" style="display:none">
    <thead>
        <tr>
            <td>date</td>
            <td>duration</td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model.Where(x=>x.seconds > 0).OrderBy(x=>x.StartedOn))
        {
            <tr>
                <td>@item.StartedOn.Value.ToString("dd-MMM-yy")</td>
                <td>@item.seconds</td>
            </tr>
        }
    </tbody>
</table>


@section scripts {
<script type="text/javascript" src="@Url.Content("~/Scripts/datatables.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/HighCharts.js")"></script>



    <script>

        $(document).ready(function () {

            $('#dtable').DataTable({
                "pageLength": 50,
                "order": [[0, "desc"]]
            });
        });



        $(function () {
            $('#container').highcharts({
                data: {
                    table: 'datatable'
                },
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Daily Runtime'
                },
                yAxis: {
                    allowDecimals: false,
                    title: {
                        text: 'Seconds'
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.series.name + '</b><br/>' +
                            this.point.y + 'seconds ' + this.point.name.toLowerCase();
                    }
                }
            });

        });

        $(function () {
            $('#container2').highcharts({
                title: {
                    text: 'Package Run'
                },
                xAxis: {
                    categories: [@Html.Raw(runDates)]
                },
                labels: {
                    items: [{
                        html: 'Total Run Time',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'
                        }
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Num Records (\'00)',
                    data: [@Html.Raw(records)]
                }, {
                    type: 'spline',
                    name: 'Time Seconds',
                    data: [@Html.Raw(duration)] ,
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[5],
                        fillColor: 'white'
                    }
                }]
            });
        });

</script>

}
