@model IEnumerable<VerifyCRM.Models.MonitoringView>

@{
    ViewBag.Title = "Package Run";

    var package = Model.FirstOrDefault();
}

<h2>Package Run: <b>@package.LevelName</b></h2>

<p>
    <div id="container"></div>
    <div id="container2"></div>
</p>
<table class="table">
    <tr>
        
        <th>
            Rundate
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Duration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompletedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>Row Count</th>
        <th>
            @Html.DisplayNameFor(model => model.Errors)
            
        </th>
        
        
    </tr>

@foreach (var item in Model.OrderByDescending(x=>x.StartedOn)) {
    <tr>
        
        <td>
            
            @item.StartedOn.Value.ToString("ddd dd-MMM-yy")

        </td>
        <td>
            @if (item.statusCode == 2)
            {
                @item.DurationToNow

            }
            else
            {
            @Html.DisplayFor(modelItem => item.Duration)
            }

            
        </td>
        <td>
            @item.StartedOn.Value.ToString("HH:mm:ss")
        </td>
        <td>
            @if(item.CompletedOn.HasValue)
            {
                @item.CompletedOn.Value.ToString("HH:mm:ss")
            }
            
            
        </td>
        <td>

            @if (!item.CompletedOn.HasValue && item.StartedOn < DateTime.Now.Date)
            {
                <span class="label label-default">8 - Incomplete</span>
            }
            else
            {
                <span class="label label-@(item.StatusLabel)">
                    @Html.DisplayFor(modelItem => item.Status)
                </span>
            }
            
        </td>
        <td>@item.RecordCount</td>
        <td>
            @Html.DisplayFor(modelItem => item.Errors)
        </td>
        
    </tr>
}

</table>


<table id="datatable" style="display:none">
    <thead>
        <tr>
            <td>date</td>
            <td>duration</td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model.Where(x=>x.seconds > 0).OrderBy(x=>x.StartedOn))
        {
            <tr>
                <td>@item.StartedOn.Value.ToString("dd-MMM-yy")</td>
                <td>@item.seconds</td>
            </tr>
        }
    </tbody>
</table>


<table id="datatable" style="display:none">
    <thead>
        <tr>
            <td>date</td>
            <td>duration</td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model.Where(x=>x.seconds > 0).OrderBy(x=>x.StartedOn))
        {
            <tr>
                <td>@item.StartedOn.Value.ToString("dd-MMM-yy")</td>
                <td>@item.seconds</td>
            </tr>
        }
    </tbody>
</table>


@section scripts {
    <script>

        $(function () {
            $('#container').highcharts({
                data: {
                    table: 'datatable'
                },
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Daily Runtime'
                },
                yAxis: {
                    allowDecimals: false,
                    title: {
                        text: 'Seconds'
                    }
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.series.name + '</b><br/>' +
                            this.point.y + 'seconds ' + this.point.name.toLowerCase();
                    }
                }
            });

        });

        $(function () {
            $('#container2').highcharts({
                title: {
                    text: 'Combination chart'
                },
                xAxis: {
                    categories: ['Apples', 'Oranges', 'Pears', 'Bananas', 'Plums']
                },
                labels: {
                    items: [{
                        html: 'Total fruit consumption',
                        style: {
                            left: '50px',
                            top: '18px',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'black'
                        }
                    }]
                },
                series: [{
                    type: 'column',
                    name: 'Jane',
                    data: [3, 2, 3, 4]
                }, {
                    type: 'spline',
                    name: 'Average',
                    data: [3, 2.67, 3, 6.33, 3.33] ,
                    marker: {
                        lineWidth: 2,
                        lineColor: Highcharts.getOptions().colors[3],
                        fillColor: 'white'
                    }
                }, {
                    type: 'pie',
                    name: 'Total consumption',
                    data: [{
                        name: 'Jane',
                        y: 13,
                        color: Highcharts.getOptions().colors[0] // Jane's color
                    }, {
                        name: 'John',
                        y: 23,
                        color: Highcharts.getOptions().colors[1] // John's color
                    }, {
                        name: 'Joe',
                        y: 19,
                        color: Highcharts.getOptions().colors[2] // Joe's color
                    }],
                    center: [100, 80],
                    size: 100,
                    showInLegend: false,
                    dataLabels: {
                        enabled: false
                    }
                }]
            });
        });

    </script>

}
